---
API: 2
OpenSesame: 3.1.2
Platform: nt
---
set width 1024
set uniform_coordinates yes
set title "New experiment"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend legacy
set round_decimals 2
set mouse_backend xpyriment
set keyboard_backend legacy
set height 768
set fullscreen no
set form_clicks no
set foreground black
set font_underline no
set font_size 18
set font_italic no
set font_family sans
set font_bold no
set experiment_path "C:\\Users\\Pascal\\Documents\\GitHub\\psynteract-os\\examples"
set disable_garbage_collection yes
set description "Default description"
set coordinates uniform
set compensation 0
set color_backend legacy
set clock_backend legacy
set canvas_backend xpyriment
set bidi no
set background white

define form_multiple_choice accept_reject_decision
	set timeout infinite
	set spacing 10
	__question__
	Your partner proposes the following split:
	You receive $[responder_payout].
	Your partner receives $[proposer_payout].
	
	Do you want to accept or reject the proposal?
	__end__
	__options__
	accept
	reject
	__end__
	set margins "50;50;50;50"
	set form_var decision
	set form_title "<span size=24>Proposal</span>"
	set description "A simple multiple choice item"
	set button_text Ok
	set allow_multiple no
	set advance_immediately no
	set _theme gray

define loop check_decision
	set source_file ""
	set source table
	set skip 0
	set repeat 100
	set order random
	set offset no
	set item accept_reject_decision
	set description "Repeatedly runs another item"
	set cycles 1
	set continuous no
	set column_order ""
	set break_if_on_first yes
	set break_if "[decision]!=no"
	setcycle 0 empty_column ""
	run accept_reject_decision

define loop check_proposal
	set source_file ""
	set source table
	set skip 0
	set repeat 100
	set order random
	set offset no
	set item proposal_decision
	set description "Repeatedly runs another item"
	set cycles 1
	set continuous no
	set column_order ""
	set break_if_on_first yes
	set break_if "[proposal]!=no"
	setcycle 0 empty_column ""
	run proposal_decision

define psynteract_communicate communicate_decision
	set waiting_message ""
	set own_var_as_test yes
	set display_message no
	set description "Push data to server, wait for responses of other clients, and get their data."
	set custom_selection "proposal, decision"
	set auto_detect_variables no
	set additional_wait 0

define psynteract_communicate communicate_proposal
	set waiting_message ""
	set own_var_as_test yes
	set display_message no
	set description "Push data to server, wait for responses of other clients, and get their data."
	set custom_selection proposal
	set auto_detect_variables no
	set additional_wait 0

define notepad description
	__note__
	This is an exemplary implementation of an Ultimatum Game using the psynteract plug-ins for OpenSesame.
	
	To enable offline test mode, check the corresponding box in the psynteract_connect plug-in and set a role in the initialize_variables inline_script by uncommenting the last line (var.current_role="proposer").
	__end__
	set description "A simple notepad to document your experiment. This plug-in does nothing."

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run description always
	run psynteract_connect always
	run initialize_variables always
	run instructions always
	run wait_instructions_finished always
	run check_proposal "[current_role]==proposer"
	run wait_for_proposer "[current_role]==responder"
	run logger always
	run communicate_proposal always
	run process_proposal always
	run check_decision "[current_role]==responder"
	run wait_for_responder "[current_role]==proposer"
	run logger always
	run communicate_decision always
	run process_decision always
	run logger always
	run feedback always

define feedback feedback
	set reset_variables yes
	set duration keypress
	set description "Provides feedback to the participant"
	draw textline center=1 color=black font_bold=no font_family=sans font_italic=no font_size=18 html=yes show_if="[current_role]==proposer" text="You receive: $[proposer_payout]<br />Your partner receives: $[responder_payout]<br /><br />Press any key to exit" x=0 y=0 z_index=0
	draw textline center=1 color=black font_bold=no font_family=sans font_italic=no font_size=18 html=yes show_if="[current_role]==responder" text="You receive: $[responder_payout]<br />Your partner receives: $[proposer_payout]<br /><br />Press any key to exit" x=0 y=0 z_index=0

define inline_script initialize_variables
	set description "Executes Python code"
	___run__
	# Set variables to default values for missing response
	# so they can be checked in the loop
	var.proposal = "no"
	var.decision = "no"
	
	# Set role for test mode:
	# var.current_role="proposer"
	__end__
	set _prepare ""

define form_text_display instructions
	set timeout infinite
	set spacing 10
	set rows "1;4;1"
	set only_render no
	set ok_text Ok
	set margins "50;50;50;50"
	set form_title "<span size=24>Instructions</span>"
	__form_text__
	In the folllowing, you will interact with a randomly assigned partner.
	
	One of you will be randomly assigned to the role of the proposer.
	The other will be in the role of the responder.
	
	The proposer decides how to split $10 between him/herself and the responder.
	
	The responders learns about the proposal and can decide whether he/she accepts or rejects it.
	In case the responder accepts the proposal, the money is split as proposed.
	In case the responder rejects the proposal, neither the proposer nor the receiver gets any money.
	__end__
	set description "A simple text display form"
	set cols "1;1;1"
	set _theme gray
	widget 0 0 3 1 label text="[form_title]"
	widget 0 1 3 1 label center=no text="[form_text]"
	widget 1 2 1 1 button text="[ok_text]"


define logger logger
	set description "Logs experimental data"
	set auto_log yes

define inline_script process_decision
	set description "Executes Python code"
	___run__
	if var.current_role=='proposer':
		var.decision = var.partner01_decision
	
	if var.decision == 'reject':
		var.proposer_payout = 0
		var.responder_payout = 0
	__end__
	set _prepare ""

define inline_script process_proposal
	set description "Executes Python code"
	___run__
	if var.current_role=='responder':
		var.proposal = var.partner01_proposal
	
	if var.proposal == '$8 for you, $2 for your partner':
		var.proposer_payout = 8
	elif var.proposal == '$7 for you, $3 for your partner':
		var.proposer_payout= 7
	elif var.proposal == '$6 for you, $4 for your partner':
		var.proposer_payout  = 6
	else:
		var.proposer_payout  = 5
	
	var.responder_payout = 10-var.proposer_payout 
	__end__
	set _prepare ""

define form_multiple_choice proposal_decision
	set timeout infinite
	set spacing 10
	__question__
	You are in the role of the proposer.
	
	Please select one of the following allocations:
	__end__
	__options__
	$5 for you, $5 for your partner
	$6 for you, $4 for your partner
	$7 for you, $3 for your partner
	$8 for you, $2 for your partner
	__end__
	set margins "50;50;50;50"
	set form_var proposal
	set form_title "<span size=24>Proposal</span>"
	set description "A simple multiple choice item"
	set button_text Ok
	set allow_multiple no
	set advance_immediately no
	set _theme gray

define psynteract_connect psynteract_connect
	set server "http://localhost:5984/"
	set roles "proposer, responder"
	set offline no
	set identical_rseed no
	set groupings_needed 1
	set group_size 2
	set ghosts no
	set display_messages yes
	set design perfect_stranger
	set description "Setup connection with session."
	set db_name psynteract

define sketchpad wait_for_proposer
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color=black font_bold=no font_family=sans font_italic=no font_size=18 html=yes show_if=always text="You are in the role of the responder.<br /><br />Please wait until your partner has made his/her proposal regarding the division of the money." x=0 y=0 z_index=0

define sketchpad wait_for_responder
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color=black font_bold=no font_family=sans font_italic=no font_size=18 html=yes show_if=always text="Please wait until your partner has decided whether he/she accepts your proposal." x=0 y=0 z_index=0

define psynteract_wait wait_instructions_finished
	set waiting_message "Waiting for other participants..."
	set display_message yes
	set description "Wait for other clients."
	set additional_wait 1000

